/**
 * Generated by orval 🍺
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
import type {
  LoginRequest,
  LoginSuccess,
  OAuthLoginRequest,
  SignupOrgRequest,
  SignupRequest,
  SignupSuccess
} from './model';

import { axiosInstance } from '../axios';




  /**
 * @summary Signup
 */
export const signup = (
    signupRequest: SignupRequest,
 ) => {
      return axiosInstance<SignupSuccess>(
      {url: `/auth/signup`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: signupRequest
    },
      );
    }
  /**
 * @summary Signup Org
 */
export const signupOrg = (
    signupOrgRequest: SignupOrgRequest,
 ) => {
      return axiosInstance<SignupSuccess>(
      {url: `/auth/signup-org`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: signupOrgRequest
    },
      );
    }
  /**
 * @summary Login
 */
export const login = (
    loginRequest: LoginRequest,
 ) => {
      return axiosInstance<LoginSuccess>(
      {url: `/auth/login`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: loginRequest
    },
      );
    }
  /**
 * @summary Login With Google
 */
export const loginWithGoogle = (
    oAuthLoginRequest: OAuthLoginRequest,
 ) => {
      return axiosInstance<LoginSuccess>(
      {url: `/auth/oauth/google`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: oAuthLoginRequest
    },
      );
    }
  /**
 * @summary Logout
 */
export const logout = (
    
 ) => {
      return axiosInstance<null>(
      {url: `/auth/logout`, method: 'POST'
    },
      );
    }
  export type SignupResult = NonNullable<Awaited<ReturnType<typeof signup>>>
export type SignupOrgResult = NonNullable<Awaited<ReturnType<typeof signupOrg>>>
export type LoginResult = NonNullable<Awaited<ReturnType<typeof login>>>
export type LoginWithGoogleResult = NonNullable<Awaited<ReturnType<typeof loginWithGoogle>>>
export type LogoutResult = NonNullable<Awaited<ReturnType<typeof logout>>>
